name: helm-deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      version:
        required: true
        type: string
      helm-values-path:
        type: string
        default: './todoapp/values.yaml'
      helm-release-name:
        type: string
        default: todoapp
      namespace:
        type: string
        default: todoapp

jobs:
  deploy-helm:
    name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: helm-package
        path: .

    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .

    - name: SetUp Helm
      uses: azure/setup-helm@v4.2.0

    - name: SetUp Kubectl
      uses: azure/setup-kubectl@v4

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/aks-set-context@v4
      with:
        resource-group: ${{ vars.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ vars.AZURE_CLUSTER_NAME }}

    - name: Deploy Helm to Development
      run: |
        helm upgrade --install --atomic --wait --timeout 3600s --debug ${{ inputs.helm-release-name }} ./todoapp-*.tgz \
        -f ${{ inputs.helm-values-path }} \
        --namespace ${{ inputs.namespace}} \
        --create-namespace \
        --set todoapp.namespace=${{ inputs.namespace }}
        --set mysql.secrets.MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD}}" \
        --set mysql.secrets.MYSQL_USER="${{ secrets.MYSQL_USER}}" \
        --set mysql.secrets.MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD}}" \
        --set todoapp.secrets.SECRET_KEY="${{ secrets.SECRET_KEY }}" \
        --set todoapp.secrets.DB_NAME="${{ secrets.DB_NAME }}" \
        --set todoapp.secrets.DB_USER="${{ secrets.DB_USER }}" \
        --set todoapp.secrets.DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
        --set todoapp.secrets.DB_HOST="${{ secrets.DB_HOST }}"




